From 5daf83ef3fa0c8b02e6592d436bd4154a05310cc Mon Sep 17 00:00:00 2001
From: Callum <38501234+calumari@users.noreply.github.com>
Date: Fri, 29 May 2020 11:50:27 +0100
Subject: [PATCH] EMC AnvilEvent

---
 .../conduit/event/AnvilEvent.java             | 78 +++++++++++++++++++
 1 file changed, 78 insertions(+)
 create mode 100644 src/main/java/net/socialhangover/conduit/event/AnvilEvent.java

diff --git a/src/main/java/net/socialhangover/conduit/event/AnvilEvent.java b/src/main/java/net/socialhangover/conduit/event/AnvilEvent.java
new file mode 100644
index 00000000..a1eac6e4
--- /dev/null
+++ b/src/main/java/net/socialhangover/conduit/event/AnvilEvent.java
@@ -0,0 +1,78 @@
+package net.socialhangover.conduit.events;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+
+public class AnvilEvent extends Event implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+
+    private final Player player;
+    private final ItemStack left;
+    private final ItemStack right;
+    private ItemStack result;
+    private int cost;
+
+    private boolean cancelled;
+
+    public AnvilEvent(@NotNull Player player, ItemStack left, ItemStack right, ItemStack result, int cost) {
+        this.player = player;
+        this.left = left;
+        this.right = right;
+        this.result = result;
+        this.cost = cost;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    @NotNull
+    public Player getPlayer() {
+        return player;
+    }
+
+    public ItemStack getLeft() {
+        return left;
+    }
+
+    public ItemStack getRight() {
+        return right;
+    }
+
+    public ItemStack getResult() {
+        return result;
+    }
+
+    public void setResult(ItemStack result) {
+        this.result = result;
+    }
+
+    public int getCost() {
+        return cost;
+    }
+
+    public void setCost(int cost) {
+        this.cost = cost;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+}
\ No newline at end of file
-- 
2.24.1.windows.2

