From 91cbd54640018cdac910ac9fb50f4a6d4aaad455 Mon Sep 17 00:00:00 2001
From: Callum <38501234+calumari@users.noreply.github.com>
Date: Mon, 25 May 2020 00:37:04 +0100
Subject: [PATCH] Conduit server config

---
 .../net/minecraft/server/DedicatedServer.java |  1 +
 .../conduit/config/ConduitConfig.java         | 96 +++++++++++++++++++
 .../org/bukkit/craftbukkit/CraftServer.java   |  8 ++
 .../java/org/bukkit/craftbukkit/Main.java     |  8 ++
 4 files changed, 113 insertions(+)
 create mode 100644 src/main/java/net/socialhangover/conduit/config/ConduitConfig.java

diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index b07c49f1..8c74a0a7 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -194,6 +194,7 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
         com.destroystokyo.paper.PaperConfig.registerCommands();
         com.destroystokyo.paper.VersionHistoryManager.INSTANCE.getClass(); // load version history now
         // Paper end
+        net.socialhangover.conduit.config.ConduitConfig.init((File) options.valueOf("conduit-settings")); // Conduit - Server config
 
         this.setSpawnAnimals(dedicatedserverproperties.spawnAnimals);
         this.setSpawnNPCs(dedicatedserverproperties.spawnNpcs);
diff --git a/src/main/java/net/socialhangover/conduit/config/ConduitConfig.java b/src/main/java/net/socialhangover/conduit/config/ConduitConfig.java
new file mode 100644
index 00000000..25ad4252
--- /dev/null
+++ b/src/main/java/net/socialhangover/conduit/config/ConduitConfig.java
@@ -0,0 +1,96 @@
+package net.socialhangover.conduit.config;
+
+import org.bukkit.Bukkit;
+import org.bukkit.configuration.InvalidConfigurationException;
+import org.bukkit.configuration.file.YamlConfiguration;
+
+import java.io.File;
+import java.io.IOException;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
+import java.util.List;
+import java.util.logging.Level;
+
+public final class ConduitConfig {
+
+    private static final String CONFIG_HEADER = "This is the main configuration file for Conduit.";
+    private static final int CURRENT_CONFIG_VERSION = 1;
+
+    private static File CONFIG_FILE;
+    public static YamlConfiguration config;
+
+    static int version;
+
+    public static void init(File file) {
+        CONFIG_FILE = file;
+        config = new YamlConfiguration();
+        try {
+            config.load(CONFIG_FILE);
+        } catch (IOException ignore) {
+        } catch (InvalidConfigurationException ex) {
+            Bukkit.getLogger().log(Level.SEVERE, "Could not load conduit.yml, please correct your syntax errors", ex);
+            throw new RuntimeException(ex);
+        }
+        config.options().header(CONFIG_HEADER);
+        config.options().copyDefaults(true);
+
+        version = getInt("config-version", CURRENT_CONFIG_VERSION);
+        set("config-version", CURRENT_CONFIG_VERSION);
+
+        readConfig(ConduitConfig.class, null);
+    }
+
+    static void readConfig(Class<?> clazz, Object instance) {
+        for (Method method : clazz.getDeclaredMethods()) {
+            if (Modifier.isPrivate(method.getModifiers())) {
+                if (method.getParameterTypes().length == 0 && method.getReturnType() == Void.TYPE) {
+                    try {
+                        method.setAccessible(true);
+                        method.invoke(instance);
+                    } catch (InvocationTargetException ex) {
+                        throw new RuntimeException(ex);
+                    } catch (Exception ex) {
+                        Bukkit.getLogger().log(Level.SEVERE, "Error invoking " + method, ex);
+                    }
+                }
+            }
+        }
+
+        try {
+            config.save(CONFIG_FILE);
+        } catch (IOException ex) {
+            Bukkit.getLogger().log(Level.SEVERE, "Could not save " + CONFIG_FILE, ex);
+        }
+    }
+
+    private static void set(String path, Object val) {
+        config.set(path, val);
+    }
+
+    private static boolean getBoolean(String path, boolean def) {
+        config.addDefault(path, def);
+        return config.getBoolean(path, config.getBoolean(path));
+    }
+
+    private static double getDouble(String path, double def) {
+        config.addDefault(path, def);
+        return config.getDouble(path, config.getDouble(path));
+    }
+
+    private static int getInt(String path, int def) {
+        config.addDefault(path, def);
+        return config.getInt(path, config.getInt(path));
+    }
+
+    private static <T> List getList(String path, T def) {
+        config.addDefault(path, def);
+        return config.getList(path, config.getList(path));
+    }
+
+    private static String getString(String path, String def) {
+        config.addDefault(path, def);
+        return config.getString(path, config.getString(path));
+    }
+
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 894917c8..3e7d7516 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -815,6 +815,7 @@ public final class CraftServer implements Server {
 
         org.spigotmc.SpigotConfig.init((File) console.options.valueOf("spigot-settings")); // Spigot
         com.destroystokyo.paper.PaperConfig.init((File) console.options.valueOf("paper-settings")); // Paper
+        net.socialhangover.conduit.config.ConduitConfig.init((File) console.options.valueOf("conduit-settings")); // Conduit
         for (WorldServer world : console.getWorlds()) {
             world.worldData.setDifficulty(config.difficulty);
             world.setSpawnFlags(config.spawnMonsters, config.spawnAnimals);
@@ -2134,6 +2135,13 @@ public final class CraftServer implements Server {
             return com.destroystokyo.paper.PaperConfig.config;
         }
 
+        // Conduit start
+        @Override
+        public YamlConfiguration getConduitConfig() {
+            return net.socialhangover.conduit.config.ConduitConfig.config;
+        }
+        // Conduit end
+
         @Override
         public void restart() {
             org.spigotmc.RestartCommand.restart();
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index ffee0c5d..4ad92673 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -139,6 +139,14 @@ public class Main {
                         .describedAs("Yml file");
                 // Paper end
 
+                // Conduit start
+                acceptsAll(asList("conduit", "conduit-settings"), "File for conduit settings")
+                        .withRequiredArg()
+                        .ofType(File.class)
+                        .defaultsTo(new File("conduit.yml"))
+                        .describedAs("Yml file");
+                // Conduit end
+
                 // Paper start
                 acceptsAll(asList("server-name"), "Name of the server")
                         .withRequiredArg()
-- 
2.24.1.windows.2

