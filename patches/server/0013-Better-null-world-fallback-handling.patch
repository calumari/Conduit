From f4bf1ce22176a7fc1ecd5170d6d6ab9c25fa7e0a Mon Sep 17 00:00:00 2001
From: Callum <38501234+calumari@users.noreply.github.com>
Date: Wed, 1 Jul 2020 13:40:10 +0100
Subject: [PATCH] Better null world fallback handling

This patch builds upon my previous upstream PR concerning null
world spawn point handling.

In the case where players attempt to join the server to an
unloaded world, the vanilla behaviour is to move them to the
overworld at their previous world's locations, which can cause
players to spawn in inopportune locations.

This patch improves the vanilla behaviour by safely relocating
players to their spawn point. While the vanilla code handles
null worlds, it does not safely handle worlds with identical
dimensions, yet differing uuids (i.e. ones that have been
deleted/regenerated).
---
 .../java/net/minecraft/server/PlayerList.java | 66 ++++++++++++-------
 1 file changed, 43 insertions(+), 23 deletions(-)

diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 3c5ba8f2f..0e00886de 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -111,7 +111,7 @@ public abstract class PlayerList {
 
         usercache.a(gameprofile);
         NBTTagCompound nbttagcompound = this.a(entityplayer);
-        ResourceKey resourcekey;
+        // ResourceKey resourcekey; // Conduit - null worlds spawn point fallback
         // CraftBukkit start - Better rename detection
         if (nbttagcompound != null && nbttagcompound.hasKey("bukkit")) {
             NBTTagCompound bukkit = nbttagcompound.getCompound("bukkit");
@@ -119,30 +119,50 @@ public abstract class PlayerList {
         }String lastKnownName = s; // Paper
         // CraftBukkit end
 
-        if (nbttagcompound != null) {
-            DataResult dataresult = DimensionManager.a(new Dynamic(DynamicOpsNBT.a, nbttagcompound.get("Dimension")));
-            Logger logger = PlayerList.LOGGER;
-
-            logger.getClass();
-            resourcekey = (ResourceKey) dataresult.resultOrPartial(logger::error).orElse(World.OVERWORLD);
-        } else {
-            resourcekey = World.OVERWORLD;
-        }
-
-        ResourceKey<World> resourcekey1 = resourcekey;
-        WorldServer worldserver = this.server.getWorldServer(resourcekey1);
-        WorldServer worldserver1;
-
-        if (worldserver == null) {
-            PlayerList.LOGGER.warn("Unknown respawn dimension {}, defaulting to overworld", resourcekey1);
-            worldserver1 = this.server.D();
+        // Conduit start - null worlds spawn point fallback
+        // if (nbttagcompound != null) {
+        //    DataResult dataresult = DimensionManager.a(new Dynamic(DynamicOpsNBT.a, nbttagcompound.get("Dimension")));
+        //    Logger logger = PlayerList.LOGGER;
+        //
+        //    logger.getClass();
+        //    resourcekey = (ResourceKey) dataresult.resultOrPartial(logger::error).orElse(World.OVERWORLD);
+        // } else {
+        //    resourcekey = World.OVERWORLD;
+        // }
+
+        // ResourceKey<World> resourcekey1 = resourcekey;
+        // WorldServer worldserver = this.server.getWorldServer(resourcekey1);
+        // WorldServer worldserver1;
+
+        // if (worldserver == null) {
+        //    PlayerList.LOGGER.warn("Unknown respawn dimension {}, defaulting to overworld", resourcekey1);
+        //    worldserver1 = this.server.D();
+        // } else {
+        //    worldserver1 = worldserver;
+        // }
+
+        // if (nbttagcompound == null) {entityplayer.moveToSpawn(worldserver1); // Paper - only move to spawn on first login, otherwise, stay where you are....
+
+        WorldServer worldserver;
+        org.bukkit.Server server = Bukkit.getServer();
+
+        if (nbttagcompound == null) {
+            worldserver = ((CraftWorld) server.getWorlds().get(0)).getHandle();
+            entityplayer.moveToSpawn(worldserver);
         } else {
-            worldserver1 = worldserver;
+            org.bukkit.World bworld;
+            String worldName = nbttagcompound.getString("world");
+            if (nbttagcompound.hasKey("WorldUUIDMost") && nbttagcompound.hasKey("WorldUUIDLeast")) {
+                UUID uid = new UUID(nbttagcompound.getLong("WorldUUIDMost"), nbttagcompound.getLong("WorldUUIDLeast"));
+                bworld =  server.getWorld(uid);
+            } else {
+                bworld = server.getWorld(worldName);
+            }
+            worldserver = bworld == null ? null : ((CraftWorld) bworld).getHandle();
         }
+        // Conduit end - null worlds spawn point fallback
 
-        if (nbttagcompound == null) entityplayer.moveToSpawn(worldserver1); // Paper - only move to spawn on first login, otherwise, stay where you are....
-
-        entityplayer.spawnIn(worldserver1);
+        entityplayer.spawnIn(worldserver); // Conduit - null worlds spawn point fallback
         entityplayer.playerInteractManager.a((WorldServer) entityplayer.world);
         String s1 = "local";
 
@@ -156,7 +176,7 @@ public abstract class PlayerList {
         Bukkit.getPluginManager().callEvent(ev);
 
         Location loc = ev.getSpawnLocation();
-        worldserver1 = ((CraftWorld) loc.getWorld()).getHandle();
+        WorldServer worldserver1 = ((CraftWorld) loc.getWorld()).getHandle(); // Conduit - null worlds spawn point fallback
 
         entityplayer.spawnIn(worldserver1);
         entityplayer.playerInteractManager.a((WorldServer) entityplayer.world);
-- 
2.24.1.windows.2

