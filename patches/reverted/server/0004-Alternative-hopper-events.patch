From 9ecf2abf933b918c4a948fc2a67c0c0f649a5fd5 Mon Sep 17 00:00:00 2001
From: Callum <38501234+calumari@users.noreply.github.com>
Date: Mon, 25 May 2020 02:08:38 +0100
Subject: [PATCH] Alternative hopper events

---
 src/main/java/net/minecraft/server/TileEntityHopper.java | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index c755faed4f..1916c05e52 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -330,6 +330,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
         } else {
             EnumDirection enumdirection = ((EnumDirection) this.getBlock().get(BlockHopper.FACING)).opposite();
 
+            if (!new net.socialhangover.conduit.event.HopperFillEvent(this.getOwner(false).getInventory(), getInventory(iinventory)).callEvent()) { return false; } // Conduit - Alternative hopper events
             if (this.b(iinventory, enumdirection)) {
                 return false;
             } else {
@@ -436,9 +437,13 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
         if (iinventory != null) {
             EnumDirection enumdirection = EnumDirection.DOWN;
 
+            // Conduit start - Alternative hopper events
+            if (c(iinventory, enumdirection)) { return false; }
+            if (!new net.socialhangover.conduit.event.HopperDrainEvent(getInventory(iinventory), getInventory(ihopper)).callEvent()) { return false; }
             // Paper start - optimize hoppers and remove streams
             skipPullModeEventFire = skipHopperEvents;
-            return !c(iinventory, enumdirection) && anyMatch(iinventory, enumdirection, (item, i) -> {
+            return anyMatch(iinventory, enumdirection, (item, i) -> {
+                // Conduit end - Alternative hopper events
                 // Logic copied from below to avoid extra getItem calls
                 if (!item.isEmpty() && canTakeItem(iinventory, item, i, enumdirection)) {
                     return hopperPull(ihopper, iinventory, item, i);
-- 
2.24.1.windows.2

